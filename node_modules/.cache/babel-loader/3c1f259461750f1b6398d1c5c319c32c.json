{"ast":null,"code":"/** @packageDocumentation @internalapi @module react_hooks */\nimport { useCallback, useRef } from 'react';\n/**\n * Returns a stabilized callback reference which delegates to the most recent unstable callback\n *\n * This is similar to useCallback, but allows unstableCallback to access the most recent values from the closure.\n * This can be useful if the callback is being stored long term, such as in the Transition Hook registry.\n *\n * Example:\n * ```jsx\n * const latestValueFromProps = props.value\n * const transitionHook = useStableCallback(() => console.log(latestValueFromProps));\n * useEffect(() => {\n *   const deregister = transitionService.onBefore({ exiting: 'someState' }, transitionHook);\n *   return () => deregister();\n * }, []);\n * ```\n */\n\nexport function useStableCallback(unstableCallback) {\n  var ref = useRef(unstableCallback);\n  ref.current = unstableCallback;\n  var callback = useCallback(function () {\n    return ref.current && ref.current.apply(this, arguments);\n  }, []);\n  return callback;\n}","map":{"version":3,"sources":["@uirouter/react/hooks/useStableCallback.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,WAAT,EAAsB,MAAtB,QAAoC,OAApC;AAEA;;;;;;;;;;;;;;;AAeG;;AAEH,OAAM,SAAU,iBAAV,CAAgD,gBAAhD,EAAmE;AACvE,MAAM,GAAG,GAAG,MAAM,CAAI,gBAAJ,CAAlB;AACA,EAAA,GAAG,CAAC,OAAJ,GAAc,gBAAd;AACA,MAAM,QAAQ,GAAG,WAAW,CAAC,YAAA;AAC3B,WAAO,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,OAAJ,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,SAAxB,CAAtB;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,SAAQ,QAAR;AACD","sourcesContent":["/** @packageDocumentation @internalapi @module react_hooks */\n\nimport { useCallback, useRef } from 'react';\n\n/**\n * Returns a stabilized callback reference which delegates to the most recent unstable callback\n *\n * This is similar to useCallback, but allows unstableCallback to access the most recent values from the closure.\n * This can be useful if the callback is being stored long term, such as in the Transition Hook registry.\n *\n * Example:\n * ```jsx\n * const latestValueFromProps = props.value\n * const transitionHook = useStableCallback(() => console.log(latestValueFromProps));\n * useEffect(() => {\n *   const deregister = transitionService.onBefore({ exiting: 'someState' }, transitionHook);\n *   return () => deregister();\n * }, []);\n * ```\n */\n\nexport function useStableCallback<T extends Function>(unstableCallback: T): T {\n  const ref = useRef<T>(unstableCallback);\n  ref.current = unstableCallback;\n  const callback = useCallback(function() {\n    return ref.current && ref.current.apply(this, arguments);\n  }, []);\n  return (callback as unknown) as T;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}