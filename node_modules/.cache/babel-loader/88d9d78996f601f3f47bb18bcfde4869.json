{"ast":null,"code":"/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @packageDocumentation @publicapi @module trace\n */\nimport { parse } from '../common/hof';\nimport { isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\nimport { safeConsole } from './safeConsole';\n/** @hidden */\n\nfunction uiViewString(uiview) {\n  if (!uiview) return 'ui-view (defunct)';\n  var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n  return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\n\n\nvar viewConfigString = function (viewConfig) {\n  var view = viewConfig.viewDecl;\n  var state = view.$context.name || '(root)';\n  return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\n\n\nfunction normalizedCat(input) {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\n\n\nvar Category;\n\n(function (Category) {\n  Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n  Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n  Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n  Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n  Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\n\nexport { Category };\n/** @hidden */\n\nvar _tid = parse('$id');\n/** @hidden */\n\n\nvar _rid = parse('router.$id');\n/** @hidden */\n\n\nvar transLbl = function (trans) {\n  return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans);\n};\n/**\n * Prints UI-Router Transition trace information to the console.\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /** @hidden */\n  function Trace() {\n    /** @hidden */\n    this._enabled = {};\n    this.approximateDigests = 0;\n  }\n  /** @hidden */\n\n\n  Trace.prototype._set = function (enabled, categories) {\n    var _this = this;\n\n    if (!categories.length) {\n      categories = Object.keys(Category).map(function (k) {\n        return parseInt(k, 10);\n      }).filter(function (k) {\n        return !isNaN(k);\n      }).map(function (key) {\n        return Category[key];\n      });\n    }\n\n    categories.map(normalizedCat).forEach(function (category) {\n      return _this._enabled[category] = enabled;\n    });\n  };\n\n  Trace.prototype.enable = function () {\n    var categories = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      categories[_i] = arguments[_i];\n    }\n\n    this._set(true, categories);\n  };\n\n  Trace.prototype.disable = function () {\n    var categories = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      categories[_i] = arguments[_i];\n    }\n\n    this._set(false, categories);\n  };\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```js\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n\n\n  Trace.prototype.enabled = function (category) {\n    return !!this._enabled[normalizedCat(category)];\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceTransitionStart = function (trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceTransitionIgnored = function (trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceHookInvocation = function (step, trans, options) {\n    if (!this.enabled(Category.HOOK)) return;\n    var event = parse('traceData.hookType')(options) || 'internal',\n        context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown',\n        name = functionToString(step.registeredHook.callback);\n    safeConsole.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n    if (!this.enabled(Category.HOOK)) return;\n    safeConsole.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceResolvePath = function (path, when, trans) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceError = function (reason, trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceSuccess = function (finalState, trans) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n    if (extra === void 0) {\n      extra = '';\n    }\n\n    if (!this.enabled(Category.UIVIEW)) return;\n    safeConsole.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceUIViewFill = function (viewData, html) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceViewSync = function (pairs) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    var uivheader = 'uiview component fqn';\n    var cfgheader = 'view config state (view name)';\n    var mapping = pairs.map(function (_a) {\n      var _b;\n\n      var uiView = _a.uiView,\n          viewConfig = _a.viewConfig;\n      var uiv = uiView && uiView.fqn;\n      var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n      return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n    }).sort(function (a, b) {\n      return (a[uivheader] || '').localeCompare(b[uivheader] || '');\n    });\n    safeConsole.table(mapping);\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n  };\n  /** @internalapi called by ui-router code */\n\n\n  Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n  };\n\n  return Trace;\n}();\n\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\n\nvar trace = new Trace();\nexport { trace };","map":{"version":3,"sources":["@uirouter/core/common/trace.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @packageDocumentation @publicapi @module trace\n */\nimport { parse } from '../common/hof';\nimport { isFunction, isNumber } from '../common/predicates';\nimport { Transition } from '../transition/transition';\nimport { ViewTuple } from '../view';\nimport { ActiveUIView, ViewConfig, ViewContext } from '../view/interface';\nimport { stringify, functionToString, maxLength, padString } from './strings';\nimport { safeConsole } from './safeConsole';\nimport { Resolvable } from '../resolve/resolvable';\nimport { PathNode } from '../path/pathNode';\nimport { PolicyWhen } from '../resolve/interface';\nimport { TransitionHook } from '../transition/transitionHook';\nimport { HookResult } from '../transition/interface';\nimport { StateObject } from '../state/stateObject';\n\n/** @hidden */\nfunction uiViewString(uiview: ActiveUIView) {\n  if (!uiview) return 'ui-view (defunct)';\n  const state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n  return `[ui-view#${uiview.id} ${uiview.$type}:${uiview.fqn} (${uiview.name}@${state})]`;\n}\n\n/** @hidden */\nconst viewConfigString = (viewConfig: ViewConfig) => {\n  const view = viewConfig.viewDecl;\n  const state = view.$context.name || '(root)';\n  return `[View#${viewConfig.$id} from '${state}' state]: target ui-view: '${view.$uiViewName}@${view.$uiViewContextAnchor}'`;\n};\n\n/** @hidden */\nfunction normalizedCat(input: Category | string): string {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nenum Category {\n  RESOLVE,\n  TRANSITION,\n  HOOK,\n  UIVIEW,\n  VIEWCONFIG,\n}\n\nexport { Category };\n\n/** @hidden */\nconst _tid = parse('$id');\n\n/** @hidden */\nconst _rid = parse('router.$id');\n\n/** @hidden */\nconst transLbl = trans => `Transition #${_tid(trans)}-${_rid(trans)}`;\n\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nexport class Trace {\n  /** @hidden */\n  approximateDigests: number;\n\n  /** @hidden */\n  private _enabled: { [key: string]: boolean } = {};\n\n  /** @hidden */\n  constructor() {\n    this.approximateDigests = 0;\n  }\n\n  /** @hidden */\n  private _set(enabled: boolean, categories: Category[]) {\n    if (!categories.length) {\n      categories = <any>Object.keys(Category)\n        .map(k => parseInt(k, 10))\n        .filter(k => !isNaN(k))\n        .map(key => Category[key]);\n    }\n    categories.map(normalizedCat).forEach(category => (this._enabled[category] = enabled));\n  }\n\n  /**\n   * Enables a trace [[Category]]\n   *\n   * ```js\n   * trace.enable(\"TRANSITION\");\n   * ```\n   *\n   * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  enable(...categories: (Category | string | number)[]);\n  enable(...categories: any[]) {\n    this._set(true, categories);\n  }\n  /**\n   * Disables a trace [[Category]]\n   *\n   * ```js\n   * trace.disable(\"VIEWCONFIG\");\n   * ```\n   *\n   * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  disable(...categories: (Category | string | number)[]);\n  disable(...categories: any[]) {\n    this._set(false, categories);\n  }\n\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```js\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n  enabled(category: Category | string | number): boolean {\n    return !!this._enabled[normalizedCat(category)];\n  }\n\n  /** @internalapi called by ui-router code */\n  traceTransitionStart(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: Started  -> ${stringify(trans)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceTransitionIgnored(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: Ignored  <> ${stringify(trans)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceHookInvocation(step: TransitionHook, trans: Transition, options: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    const event = parse('traceData.hookType')(options) || 'internal',\n      context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown',\n      name = functionToString((step as any).registeredHook.callback);\n    safeConsole.log(`${transLbl(trans)}:   Hook -> ${event} context: ${context}, ${maxLength(200, name)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceHookResult(hookResult: HookResult, trans: Transition, transitionOptions: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    safeConsole.log(`${transLbl(trans)}:   <- Hook returned: ${maxLength(200, stringify(hookResult))}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceResolvePath(path: PathNode[], when: PolicyWhen, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(`${transLbl(trans)}:         Resolving ${path} (${when})`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceResolvableResolved(resolvable: Resolvable, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    safeConsole.log(\n      `${transLbl(trans)}:               <- Resolved  ${resolvable} to: ${maxLength(200, stringify(resolvable.data))}`\n    );\n  }\n\n  /** @internalapi called by ui-router code */\n  traceError(reason: any, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: <- Rejected ${stringify(trans)}, reason: ${reason}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceSuccess(finalState: StateObject, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    safeConsole.log(`${transLbl(trans)}: <- Success  ${stringify(trans)}, final state: ${finalState.name}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewEvent(event: string, viewData: ActiveUIView, extra = '') {\n    if (!this.enabled(Category.UIVIEW)) return;\n    safeConsole.log(`ui-view: ${padString(30, event)} ${uiViewString(viewData)}${extra}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewConfigUpdated(viewData: ActiveUIView, context: ViewContext) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Updating', viewData, ` with ViewConfig from context='${context}'`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewFill(viewData: ActiveUIView, html: string) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent('Fill', viewData, ` with: ${maxLength(200, html)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewSync(pairs: ViewTuple[]) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    const uivheader = 'uiview component fqn';\n    const cfgheader = 'view config state (view name)';\n    const mapping = pairs\n      .map(({ uiView, viewConfig }) => {\n        const uiv = uiView && uiView.fqn;\n        const cfg = viewConfig && `${viewConfig.viewDecl.$context.name}: (${viewConfig.viewDecl.$name})`;\n        return { [uivheader]: uiv, [cfgheader]: cfg };\n      })\n      .sort((a, b) => (a[uivheader] || '').localeCompare(b[uivheader] || ''));\n\n    safeConsole.table(mapping);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewServiceEvent(event: string, viewConfig: ViewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(`VIEWCONFIG: ${event} ${viewConfigString(viewConfig)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewServiceUIViewEvent(event: string, viewData: ActiveUIView) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    safeConsole.log(`VIEWCONFIG: ${event} ${uiViewString(viewData)}`);\n  }\n}\n\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nconst trace = new Trace();\nexport { trace };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}