{"ast":null,"code":"/** @packageDocumentation @publicapi @module params */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\n\nvar StateParams =\n/** @class */\nfunction () {\n  function StateParams(params) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    extend(this, params);\n  }\n  /**\n   * Merges a set of parameters with all parameters inherited between the common parents of the\n   * current state and a given destination state.\n   *\n   * @param {Object} newParams The set of parameters which will be composited with inherited params.\n   * @param {Object} $current Internal definition of object representing the current state.\n   * @param {Object} $to Internal definition of object representing state to transition to.\n   */\n\n\n  StateParams.prototype.$inherit = function (newParams, $current, $to) {\n    var parentParams;\n    var parents = ancestors($current, $to),\n        inherited = {},\n        inheritList = [];\n\n    for (var i in parents) {\n      if (!parents[i] || !parents[i].params) continue;\n      parentParams = Object.keys(parents[i].params);\n      if (!parentParams.length) continue;\n\n      for (var j in parentParams) {\n        if (inheritList.indexOf(parentParams[j]) >= 0) continue;\n        inheritList.push(parentParams[j]);\n        inherited[parentParams[j]] = this[parentParams[j]];\n      }\n    }\n\n    return extend({}, inherited, newParams);\n  };\n\n  return StateParams;\n}();\n\nexport { StateParams };","map":{"version":3,"sources":["@uirouter/core/params/stateParams.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,MAAT,EAAiB,SAAjB,QAAuC,kBAAvC;AAGA;;AACA,IAAA,WAAA;AAAA;AAAA,YAAA;AAGE,WAAA,WAAA,CAAY,MAAZ,EAA4B;AAAhB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAgB;;AAC1B,IAAA,MAAM,CAAC,IAAD,EAAO,MAAP,CAAN;AACD;AAED;;;;;;;AAOG;;;AACH,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,SAAT,EAAyB,QAAzB,EAAgD,GAAhD,EAAgE;AAC9D,QAAI,YAAJ;AACA,QAAM,OAAO,GAAG,SAAS,CAAC,QAAD,EAAW,GAAX,CAAzB;AAAA,QACE,SAAS,GAAQ,EADnB;AAAA,QAEE,WAAW,GAAa,EAF1B;;AAIA,SAAK,IAAM,CAAX,IAAgB,OAAhB,EAAyB;AACvB,UAAI,CAAC,OAAO,CAAC,CAAD,CAAR,IAAe,CAAC,OAAO,CAAC,CAAD,CAAP,CAAW,MAA/B,EAAuC;AACvC,MAAA,YAAY,GAAG,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,CAAD,CAAP,CAAW,MAAvB,CAAf;AACA,UAAI,CAAC,YAAY,CAAC,MAAlB,EAA0B;;AAE1B,WAAK,IAAM,CAAX,IAAgB,YAAhB,EAA8B;AAC5B,YAAI,WAAW,CAAC,OAAZ,CAAoB,YAAY,CAAC,CAAD,CAAhC,KAAwC,CAA5C,EAA+C;AAC/C,QAAA,WAAW,CAAC,IAAZ,CAAiB,YAAY,CAAC,CAAD,CAA7B;AACA,QAAA,SAAS,CAAC,YAAY,CAAC,CAAD,CAAb,CAAT,GAA6B,KAAK,YAAY,CAAC,CAAD,CAAjB,CAA7B;AACD;AACF;;AACD,WAAO,MAAM,CAAC,EAAD,EAAK,SAAL,EAAgB,SAAhB,CAAb;AACD,GAlBD;;AAmBF,SAAA,WAAA;AAAC,CAlCD,EAAA","sourcesContent":["/** @packageDocumentation @publicapi @module params */\nimport { extend, ancestors, Obj } from '../common/common';\nimport { StateObject } from '../state/stateObject';\n\n/** @internalapi */\nexport class StateParams {\n  [key: string]: any;\n\n  constructor(params: Obj = {}) {\n    extend(this, params);\n  }\n\n  /**\n   * Merges a set of parameters with all parameters inherited between the common parents of the\n   * current state and a given destination state.\n   *\n   * @param {Object} newParams The set of parameters which will be composited with inherited params.\n   * @param {Object} $current Internal definition of object representing the current state.\n   * @param {Object} $to Internal definition of object representing state to transition to.\n   */\n  $inherit(newParams: Obj, $current: StateObject, $to: StateObject) {\n    let parentParams: string[];\n    const parents = ancestors($current, $to),\n      inherited: Obj = {},\n      inheritList: string[] = [];\n\n    for (const i in parents) {\n      if (!parents[i] || !parents[i].params) continue;\n      parentParams = Object.keys(parents[i].params);\n      if (!parentParams.length) continue;\n\n      for (const j in parentParams) {\n        if (inheritList.indexOf(parentParams[j]) >= 0) continue;\n        inheritList.push(parentParams[j]);\n        inherited[parentParams[j]] = this[parentParams[j]];\n      }\n    }\n    return extend({}, inherited, newParams);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}