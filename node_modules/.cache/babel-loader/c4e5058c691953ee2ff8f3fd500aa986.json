{"ast":null,"code":"/** @packageDocumentation @publicapi @module common */\nimport { pushTo } from './common';\n\nvar Queue =\n/** @class */\nfunction () {\n  function Queue(_items, _limit) {\n    if (_items === void 0) {\n      _items = [];\n    }\n\n    if (_limit === void 0) {\n      _limit = null;\n    }\n\n    this._items = _items;\n    this._limit = _limit;\n    this._evictListeners = [];\n    this.onEvict = pushTo(this._evictListeners);\n  }\n\n  Queue.prototype.enqueue = function (item) {\n    var items = this._items;\n    items.push(item);\n    if (this._limit && items.length > this._limit) this.evict();\n    return item;\n  };\n\n  Queue.prototype.evict = function () {\n    var item = this._items.shift();\n\n    this._evictListeners.forEach(function (fn) {\n      return fn(item);\n    });\n\n    return item;\n  };\n\n  Queue.prototype.dequeue = function () {\n    if (this.size()) return this._items.splice(0, 1)[0];\n  };\n\n  Queue.prototype.clear = function () {\n    var current = this._items;\n    this._items = [];\n    return current;\n  };\n\n  Queue.prototype.size = function () {\n    return this._items.length;\n  };\n\n  Queue.prototype.remove = function (item) {\n    var idx = this._items.indexOf(item);\n\n    return idx > -1 && this._items.splice(idx, 1)[0];\n  };\n\n  Queue.prototype.peekTail = function () {\n    return this._items[this._items.length - 1];\n  };\n\n  Queue.prototype.peekHead = function () {\n    if (this.size()) return this._items[0];\n  };\n\n  return Queue;\n}();\n\nexport { Queue };","map":{"version":3,"sources":["@uirouter/core/common/queue.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,MAAT,QAAuB,UAAvB;;AAEA,IAAA,KAAA;AAAA;AAAA,YAAA;AAIE,WAAA,KAAA,CAAoB,MAApB,EAA8C,MAA9C,EAAmE;AAA/C,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAgB;;AAAU,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,IAAA;AAAqB;;AAA/C,SAAA,MAAA,GAAA,MAAA;AAA0B,SAAA,MAAA,GAAA,MAAA;AAHtC,SAAA,eAAA,GAAyC,EAAzC;AACD,SAAA,OAAA,GAAU,MAAM,CAAC,KAAK,eAAN,CAAhB;AAEgE;;AAEvE,EAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAe;AACb,QAAM,KAAK,GAAG,KAAK,MAAnB;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACA,QAAI,KAAK,MAAL,IAAe,KAAK,CAAC,MAAN,GAAe,KAAK,MAAvC,EAA+C,KAAK,KAAL;AAC/C,WAAO,IAAP;AACD,GALD;;AAOA,EAAA,KAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,QAAM,IAAI,GAAM,KAAK,MAAL,CAAY,KAAZ,EAAhB;;AACA,SAAK,eAAL,CAAqB,OAArB,CAA6B,UAAA,EAAA,EAAE;AAAI,aAAA,EAAE,CAAF,IAAE,CAAF;AAAQ,KAA3C;;AACA,WAAO,IAAP;AACD,GAJD;;AAMA,EAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,QAAI,KAAK,IAAL,EAAJ,EAAiB,OAAO,KAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAAP;AAClB,GAFD;;AAIA,EAAA,KAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,QAAM,OAAO,GAAG,KAAK,MAArB;AACA,SAAK,MAAL,GAAc,EAAd;AACA,WAAO,OAAP;AACD,GAJD;;AAMA,EAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAL,CAAY,MAAnB;AACD,GAFD;;AAIA,EAAA,KAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAc;AACZ,QAAM,GAAG,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAAZ;;AACA,WAAO,GAAG,GAAG,CAAC,CAAP,IAAY,KAAK,MAAL,CAAY,MAAZ,CAAmB,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,CAAnB;AACD,GAHD;;AAKA,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,KAAK,MAAL,CAAY,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAAjC,CAAP;AACD,GAFD;;AAIA,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,QAAI,KAAK,IAAL,EAAJ,EAAiB,OAAO,KAAK,MAAL,CAAY,CAAZ,CAAP;AAClB,GAFD;;AAGF,SAAA,KAAA;AAAC,CA7CD,EAAA","sourcesContent":["/** @packageDocumentation @publicapi @module common */\nimport { pushTo } from './common';\n\nexport class Queue<T> {\n  private _evictListeners: ((item: T) => void)[] = [];\n  public onEvict = pushTo(this._evictListeners);\n\n  constructor(private _items: T[] = [], private _limit: number = null) {}\n\n  enqueue(item: T) {\n    const items = this._items;\n    items.push(item);\n    if (this._limit && items.length > this._limit) this.evict();\n    return item;\n  }\n\n  evict(): T {\n    const item: T = this._items.shift();\n    this._evictListeners.forEach(fn => fn(item));\n    return item;\n  }\n\n  dequeue(): T {\n    if (this.size()) return this._items.splice(0, 1)[0];\n  }\n\n  clear(): Array<T> {\n    const current = this._items;\n    this._items = [];\n    return current;\n  }\n\n  size(): number {\n    return this._items.length;\n  }\n\n  remove(item: T) {\n    const idx = this._items.indexOf(item);\n    return idx > -1 && this._items.splice(idx, 1)[0];\n  }\n\n  peekTail(): T {\n    return this._items[this._items.length - 1];\n  }\n\n  peekHead(): T {\n    if (this.size()) return this._items[0];\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}