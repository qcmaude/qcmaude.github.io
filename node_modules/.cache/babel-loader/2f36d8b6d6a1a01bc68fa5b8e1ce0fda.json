{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/** @packageDocumentation @reactapi @module react */\n\n\nimport { UIRouter } from '@uirouter/core';\nimport { ReactViewConfig, reactViewsBuilder } from './reactViews';\n/**\n * React View Config Factory\n *\n * Given a path and a [[ReactViewDeclaration]]\n * (the view declaration object found on the state declaration),\n * returns a [[ReactViewConfig]]\n *\n * The ReactViewConfig is an instance of a view,\n * which will be provided to the matching `UIView` Component's\n * [[UIView.viewConfigUpdated]] function.\n *\n * @internalapi\n */\n\nvar viewConfigFactory = function (node, config) {\n  return new ReactViewConfig(node, config);\n};\n/** @hidden */\n\n\nexport var StartMethodCalledMoreThanOnceError = \"\\n  The Router.start() method has been called more than once.\\n\\n  The <UIRouter> component calls start() as final step of the initialization and you shouldn't need to call it manually.\\n\";\n/**\n * The main UIRouter object\n *\n * This is the main UIRouter object.\n * There should be one instance of this object per running application.\n *\n * This class has references to all the other UIRouter services.\n */\n\nvar UIRouterReact =\n/** @class */\nfunction (_super) {\n  __extends(UIRouterReact, _super);\n  /**\n   * Creates a new UIRouter instance\n   *\n   * This can be used to manually bootstrap the router.\n   *\n   * #### Example:\n   * ```js\n   * import { UIRouterReact } from \"ui-router-ng2\";\n   * let routerInstance = new UIRouterReact();\n   * routerInstance.start();\n   * ```\n   */\n\n\n  function UIRouterReact() {\n    var _this = _super.call(this) || this;\n\n    _this.started = false;\n\n    _this.viewService._pluginapi._viewConfigFactory('react', viewConfigFactory);\n\n    _this.stateRegistry.decorator('views', reactViewsBuilder);\n\n    return _this;\n  }\n  /**\n   * Starts the router\n   *\n   * Calling this method enables listening to the URL for changes.\n   * It also performs the initial state synchronization from the URL.\n   */\n\n\n  UIRouterReact.prototype.start = function () {\n    // Throw error if user calls `start` more than once\n    if (this.started) {\n      throw new Error(StartMethodCalledMoreThanOnceError);\n    } else {\n      this.urlMatcherFactory.$get();\n      this.urlRouter.listen();\n      this.urlRouter.sync();\n      this.started = true;\n    }\n  };\n\n  return UIRouterReact;\n}(UIRouter);\n\nexport { UIRouterReact };","map":{"version":3,"sources":["@uirouter/react/core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,SAAS,QAAT,QAAmC,gBAAnC;AAEA,SAAS,eAAT,EAA0B,iBAA1B,QAAmD,cAAnD;AAEA;;;;;;;;;;;;AAYG;;AACH,IAAI,iBAAiB,GAAG,UAAC,IAAD,EAAmB,MAAnB,EAA+C;AAAK,SAAA,IAAI,eAAJ,CAAoB,IAApB,EAAA,MAAA,CAAA;AAAiC,CAA7G;AAEA;;;AACA,OAAO,IAAM,kCAAkC,GAAG,6LAA3C;AAMP;;;;;;;AAOG;;AACH,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;AAEjC;;;;;;;;;;;AAWG;;;AACH,WAAA,aAAA,GAAA;AAAA,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAbA,IAAA,KAAA,CAAA,OAAA,GAAU,KAAV;;AAeE,IAAA,KAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,kBAA5B,CAA+C,OAA/C,EAAwD,iBAAxD;;AACA,IAAA,KAAI,CAAC,aAAL,CAAmB,SAAnB,CAA6B,OAA7B,EAAsC,iBAAtC;;;AACD;AAED;;;;;AAKG;;;AACH,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE;AACA,QAAI,KAAK,OAAT,EAAkB;AAChB,YAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD,KAFD,MAEO;AACL,WAAK,iBAAL,CAAuB,IAAvB;AACA,WAAK,SAAL,CAAe,MAAf;AACA,WAAK,SAAL,CAAe,IAAf;AACA,WAAK,OAAL,GAAe,IAAf;AACD;AACF,GAVD;;AAWF,SAAA,aAAA;AAAC,CArCD,CAAmC,QAAnC,CAAA","sourcesContent":["/** @packageDocumentation @reactapi @module react */\nimport { UIRouter, PathNode } from '@uirouter/core';\nimport { ReactViewDeclaration } from './interface';\nimport { ReactViewConfig, reactViewsBuilder } from './reactViews';\n\n/**\n * React View Config Factory\n *\n * Given a path and a [[ReactViewDeclaration]]\n * (the view declaration object found on the state declaration),\n * returns a [[ReactViewConfig]]\n *\n * The ReactViewConfig is an instance of a view,\n * which will be provided to the matching `UIView` Component's\n * [[UIView.viewConfigUpdated]] function.\n *\n * @internalapi\n */\nlet viewConfigFactory = (node: [PathNode], config: ReactViewDeclaration) => new ReactViewConfig(node, config);\n\n/** @hidden */\nexport const StartMethodCalledMoreThanOnceError = `\n  The Router.start() method has been called more than once.\n\n  The <UIRouter> component calls start() as final step of the initialization and you shouldn't need to call it manually.\n`;\n\n/**\n * The main UIRouter object\n *\n * This is the main UIRouter object.\n * There should be one instance of this object per running application.\n *\n * This class has references to all the other UIRouter services.\n */\nexport class UIRouterReact extends UIRouter {\n  started = false;\n  /**\n   * Creates a new UIRouter instance\n   *\n   * This can be used to manually bootstrap the router.\n   *\n   * #### Example:\n   * ```js\n   * import { UIRouterReact } from \"ui-router-ng2\";\n   * let routerInstance = new UIRouterReact();\n   * routerInstance.start();\n   * ```\n   */\n  constructor() {\n    super();\n    this.viewService._pluginapi._viewConfigFactory('react', viewConfigFactory);\n    this.stateRegistry.decorator('views', reactViewsBuilder);\n  }\n\n  /**\n   * Starts the router\n   *\n   * Calling this method enables listening to the URL for changes.\n   * It also performs the initial state synchronization from the URL.\n   */\n  start(): void {\n    // Throw error if user calls `start` more than once\n    if (this.started) {\n      throw new Error(StartMethodCalledMoreThanOnceError);\n    } else {\n      this.urlMatcherFactory.$get();\n      this.urlRouter.listen();\n      this.urlRouter.sync();\n      this.started = true;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}